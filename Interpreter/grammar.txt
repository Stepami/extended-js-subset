Script -> StatementList
StatementList -> StatementListItem*
StatementListItem -> Statement
                     Declaration
                     
Statement -> BlockStatement
             ExpressionStatement
             IfStatement
             WhileStatement
             ContinueStatement
             BreakStatement
             ReturnStatement
             TypeStatement
             
Declaration -> LexicalDeclaration
               FunctionDeclaration
               
BlockStatement -> '{' StatementList '}'

ExpressionStatement -> Expression
Expression -> AssignExpression
AssignExpression -> LeftHandSideExpression ('=' AssignExpression)?
LeftHandSideExpression -> CastExpression
                          CallExpression
                          WithExpression
CallExpression -> MemberExpression Arguments*
Arguments -> '(' ArgumentsList? ')'
ArgumentsList -> AssignExpression (',' AssignExpression)*
MemberExpression -> "Ident" ('[' Expression ']' | '.' "Ident" )*
CastExpression -> ConditionalExpression 'as' TypeIdentifier
WithExpression -> "Ident" 'with' ObjectLiteral
ConditionalExpression -> OrExpression ('?' AssignExpression ':' AssignExpression)?
OrExpression -> AndExpression ('||' AndExpression)*
AndExpression -> EqExpression ('&&' EqExpression)*
EqExpression -> RelExpression (('=='|'!=') RelExpression)*
RelExpression -> AddExpression (('<'|'>'|'<='|'>=') AddExpression)*
AddExpression -> MulExpression (('+'|'-') MulExpression)*
MulExpression -> UnaryExpression (('*'|'/'|'%') UnaryExpression)*
UnaryExpression -> PrimaryExpression | ('-'|'!') UnaryExpression
PrimaryExpression -> "Ident" | Literal | '(' Expression ')' | ObjectLiteral | ArrayLiteral
Literal -> "NullLiteral"
           "IntegerLiteral"
           "FloatLiteral"
           "StringLiteral"
           "BooleanLiteral"
ObjectLiteral -> '{' PropertyDefinitionList '}'
PropertyDefinitionList -> (Property ';')*
Property -> FieldProperty
            MethodProperty
FieldProperty -> "Ident" ':' Expression
MethodProperty -> "Ident" '=>' MethodDeclaration
MethodDeclaration -> '(' FunctionParameters? ')' Type? BlockStatement
ArrayLiteral -> '[' ElementList ']'
ElementList -> (Expression ',')*
             
IfStatement -> 'if' '(' Expression ')' Statement ('else' Statement)?

WhileStatement -> 'while' '(' Expression ')' Statement

ContinueStatement -> 'continue'

BreakStatement -> 'break'

ReturnStatement -> 'return' Expression?

TypeStatement -> 'type' "Ident" = TypeValue
TypeValue -> TypeValueBase TypeValueSuffix*
TypeValueBase -> "Ident"
                 FunctionTypeBase
                 ObjectTypeBase
ObjectTypeBase -> '{' PropertyTypeList '}'
PropertyTypeList -> (PropertyType ';')*
PropertyType -> "Ident" ':' TypeValue
FunctionTypeBase -> '(' ArgTypeList ')' '=>' TypeValue
ArgTypeList -> (TypeValue ',')*
TypeValueSuffix -> '['']'
                   '?'
 
LexicalDeclaration -> LetOrConst "Ident" Initialization (',' "Ident" Initialization)*
LetOrConst -> 'let'
              'const'
Initialization -> Typed
                  Initializer
Typed -> Type Initializer?
Initializer -> '=' Expression

FunctionDeclaration -> 'function' "Ident" '(' FunctionParameters? ')' Type? BlockStatement
FunctionParameters -> ParameterDeclaration (',' ParameterDeclaration)*
ParameterDeclaration -> "Ident" Type
Type -> ':' TypeValue